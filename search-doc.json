[{"title":"Hola","type":0,"sectionRef":"#","url":"blog/2019/05/28/hola","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":""},{"title":"Hello","type":0,"sectionRef":"#","url":"blog/2019/05/29/hello-world","content":"Welcome to this blog. This blog is created with Docusaurus 2 alpha. This is a test post. A whole bunch of other information.","keywords":""},{"title":"Welcome","type":0,"sectionRef":"#","url":"blog/2019/05/30/welcome","content":"","keywords":""},{"title":"put HYAK news or achievements or something here?","type":1,"pageTitle":"Welcome","url":"blog/2019/05/30/welcome#put-hyak-news-or-achievements-or-something-here","content":"Blog features are powered by the blog plugin. Simply add files to the blog directory. It supports tags as well! Delete the whole directory if you don't want the blog features. As simple as that! "},{"title":"Start Here","type":0,"sectionRef":"#","url":"docs/","content":"","keywords":""},{"title":"Markdown Files","type":1,"pageTitle":"Start Here","url":"docs/#markdown-files","content":"Basically all Markdown files go in the docs folder Each Markdown file should have at least id and title YAML headers: Copy --- id: some-id # seems like the convention is to separate words with hyphens? title: Some Title --- ...rest of Markdown document...  "},{"title":"Sidebar Configuration","type":1,"pageTitle":"Start Here","url":"docs/#sidebar-configuration","content":"Add the id of the Markdown document to the correct category/make new category in sidebars.js sidebars.js should have a general structure like: Copy module.exports={ sidebarName:{ \"Some Category Name\":[ \"some-id\", \"another-id\", ... ], \"Another Category Name\":[ \"yet-another-id\", {// subcategory declaration type:'category', label:'Subcategory Name', items:[ 'subcategory-doc-id', ... ] } \"yet-yet-another-id\" ... ] } }  Full description of possible headers (more info here): id: A unique document id. If this field is not present, the document's id will default to its file name (without the extension). (Please still explicitly include the id though! )title: The title of your document. If this field is not present, the document's title will default to its id. (Also explicitly include the title too)hide_title: Whether to hide the title at the top of the doc. By default it is false.sidebar_label: The text shown in the document sidebar and in the next/previous button for this document. If this field is not present, the document's sidebar_label will default to its title.custom_edit_url: The URL for editing this document. If this field is not present, the document's edit URL will fall back to editUrl from options fields passed to docusaurus-plugin-content-docs.keywords: Keywords meta tag for the document page, for search engines.description: The description of your document, which will become the <meta name=\"description\" content=\"...\"/> and <meta property=\"og:description\" content=\"...\"/> in <head>, used by search engines. If this field is not present, it will default to the first line of the contents.image: Cover or thumbnail image that will be used when displaying the link to your post. More information about sidebars here. "},{"title":"Getting Set Up","type":0,"sectionRef":"#","url":"docs/getting_started/setup","content":"Probably have something about how to register with UW RCC and getting Hyak and Lolo up and what not here.","keywords":""},{"title":"Linking Markdown to Docusaurus","type":0,"sectionRef":"#","url":"docs/link-markdown","content":"","keywords":""},{"title":"Markdown Files","type":1,"pageTitle":"Linking Markdown to Docusaurus","url":"docs/link-markdown#markdown-files","content":"Basically all Markdown files go in the docs folder Each Markdown file should have at least id and title YAML headers: Copy --- id: some-id # seems like the convention is to separate words with hyphens? title: Some Title --- ...rest of Markdown document...  "},{"title":"Sidebar Configuration","type":1,"pageTitle":"Linking Markdown to Docusaurus","url":"docs/link-markdown#sidebar-configuration","content":"Add the id of the Markdown document to the correct category/make new category in sidebars.js sidebars.js should have a general structure like: Copy module.exports={ sidebarName:{ \"Some Category Name\":[ \"some-id\", \"another-id\", ... ], \"Another Category Name\":[ \"yet-another-id\", {// subcategory declaration type:'category', label:'Subcategory Name', items:[ 'subcategory-doc-id', ... ] } \"yet-yet-another-id\" ... ] } }  Full description of possible headers (more info here): id: A unique document id. If this field is not present, the document's id will default to its file name (without the extension). (Please still explicitly include the id though! )title: The title of your document. If this field is not present, the document's title will default to its id. (Also explicitly include the title too)hide_title: Whether to hide the title at the top of the doc. By default it is false.sidebar_label: The text shown in the document sidebar and in the next/previous button for this document. If this field is not present, the document's sidebar_label will default to its title.custom_edit_url: The URL for editing this document. If this field is not present, the document's edit URL will fall back to editUrl from options fields passed to docusaurus-plugin-content-docs.keywords: Keywords meta tag for the document page, for search engines.description: The description of your document, which will become the <meta name=\"description\" content=\"...\"/> and <meta property=\"og:description\" content=\"...\"/> in <head>, used by search engines. If this field is not present, it will default to the first line of the contents.image: Cover or thumbnail image that will be used when displaying the link to your post. More information about sidebars here. "},{"title":"Scheduling Jobs","type":0,"sectionRef":"#","url":"docs/getting_started/scheduling-jobs","content":"","keywords":""},{"title":"Interactive Nodes","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#interactive-nodes","content":"There are two types of interactive nodes. Compute nodes run computations but cannot connect to the internet. Build nodes are compute nodes that can connect to the Internet to get files and install packages from outside the mox ecosystem. "},{"title":"Obtaining Interactive Nodes","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#obtaining-interactive-nodes","content":"To get an interactive compute node with <size> GB of memory in your group partition called <group_name> for <time> hours, use: Copy srun -p <group_name> --time=<time> --mem=<size>G --pty /bin/bash Common acceptable time formats include hours:minutes:seconds, days-hours, and minutes. Example: Copy [linj66@mox2 ~]$ srun -p stf --time=1:00:00 --mem=20G --pty /bin/bash [linj66@n2148 ~]$   To get an interactive compute node with <num_cores> cores, use: Copy srun -p <group_name> -A <group_name> --nodes=1\\ --ntasks-per-node=<num_cores> --time=<time>\\ --mem=<size>G --pty /bin/bash  To get multiple interactive compute nodes with <num_nodes> as the number of nodes and <cores_per_node> as the number of cores, use: Copy srun -p <group_name> -A <group_name> --nodes=<num_nodes>\\ --ntasks-per-node=<cores_per_node> --time=<time>\\ --mem=<size>G --pty /bin/bash When this command runs, you will automatically enter into a session in one of the allocated nodes. To view the names of all your allocated nodes, use scontrol show hostnames. important If you are using an interactive node to run a parallel application such as Python multiprocessing, MPI, OpenMP etc. then the number given for the --ntasks-per-node option must match the number of processes used by your application.  If your group has an interactive node, use the option -p <group_name>-int like so: Copy srun -p <group_name>-int -A <group_name> --time=<time> --mem=<size>G --pty /bin/bash note --pty /bin/bashmust be the last option given in above commandIf you do not obtain a build node with the specified --mem value, try smaller memory values For more details, read the srun man page. "},{"title":"Build Nodes","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#build-nodes","content":"Build nodes are allocated from the build group partition. To obtain a build node, execute srun with the option -p build. "},{"title":"Specifying Memory Size","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#specifying-memory-size","content":"It is important to use the --mem option to specify the memory allocation; otherwise the Slurm scheduler limits the memory allocation to a default value which is usually quite low. The value given to --mem should be smaller than the memory of the node as the operating system needs some. For 64GB nodes, use --mem=58GFor 128GB nodes, use --mem=120GFor 192GB nodes, use --mem=185GFor 256GB nodes, use --mem=248GFor 384GB nodes, use --mem=374GFor 512GB nodes, use --mem=500GFor 768GB nodes, use --mem=752GFor the knl nodes, use --mem=200G "},{"title":"Slurm Environment Variables","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#slurm-environment-variables","content":"When a job scheduled by Slurm begins, it needs to about how it was scheduled, what its working directory is, who submitted the job, the number of nodes and cores allocated to it, etc. This information is passed to Slurm via environment variables. Additionally, these environment variables are also used as default values by programs like mpirun. To view a node's Slurm environment variables, use export | grep SLURM. A comprehensive list of the environment variables Slurm sets for each job can be found at the end of the sbatch man page. "},{"title":"Batch Jobs","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#batch-jobs","content":""},{"title":"Single Node Batch Jobs","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#single-node-batch-jobs","content":"Below is a slurm script template. Submit a batch job from the mox login node by calling sbatch <script_name>.slurm. <script_name>.slurm Copy !/bin/bash # JOB NAME SBATCH --job-name=<your_job_name> # ALLOCATION DEFINITION # The account and partition options should be the same # except in a few cases (e.g. ckpt queue, genpool queue) SBATCH --account=<group_name> SBATCH --partition=<group_name> # RESOURCES SBATCH --nodes=<num_nodes># total number of nodes allocated SBATCH --ntasks-per-node=<cores_per_node># cores per node # WALL TIME # Do not specify a wall time significantly more than your job needs # Common acceptable time formats: # hours:minutes:seconds e.g. 3:00:00 for 3 hours # minutes # days-hours SBATCH --time=<time> # MEMORY PER NODE # See above \"Specifying Memory Size\" for options SBATCH --mem=<size>G # e.g. --mem=100G for 100 GB of memory # WORKING DIRECTORY ENTRYPOINT # Specify the working directory for this job SBATCH --chdir=/gscratch/<group_name>/<net_id>/path/to/dir # Turn on email notifications SBATCH --mail-type=ALL SBATCH --mail-user=<your_email> # Export all environment variables to the batch job session SBATCH --export=all # Run the commands to run your program here # e.g. load modules, copy input.output files, run program, etc. <commands_to_run_your_program> "},{"title":"Multiple Node Batch Jobs","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#multiple-node-batch-jobs","content":"If your batch job is using multiple nodes, your program should also know how to use all the nodes (e.g. your program is an MPI program). The value given for --nodes must be less than or equal to the total number of nodes owned by your group. The value given for --ntasks-per-node should be either 28 for older mox nodes or 40 for newer nodes. Do not increase these values. You can decrease these values if your program is running out of memory on a node. Copy SBATCH --nodes=4 SBATCH --ntasks-per-node=28 # OR SBATCH --ntasks-per-node=40 "},{"title":"Self-Limiting Your Number of Running Jobs","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#self-limiting-your-number-of-running-jobs","content":"note This feature is not enabled on the ckpt partition At times you may wish to self-limit the number of jobs that will be run simultaneously in order to leave nodes in your group's partition for other group members. To achieve this, you can add SBATCH --qos=MaxJobs<n> where n is a number between 1 and 10 to tell the job scheduler to allow only n jobs running with the option --qos=MaxJobs<n>. However, any other jobs without this option set are not limited and jobs with a different value of n are gated separately. "},{"title":"Common Slurm Error Messages","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#common-slurm-error-messages","content":"slurmstepd: error: Exceeded job memory limit: your program uses more memory than you allotted during node creation and it has run out of memory. Get a node with more memory and try again.(ReqNodeNotAvail, UnavailableNodes:n[<node numbers list>]: your node will not expire (and might be running one of your jobs) before the next scheduled maintenance day. Either get a node with a shorter --time duration or wait until after the maintenance has been completed.Unable to allocate resources: Invalid account or account/partition combination specified: you used -p <group_name> -A <group_name> and you do not belong to that group. "},{"title":"Utility Commands","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#utility-commands","content":"With <net_id> as your UW NetID and <group_name> as your Hyak group partition name, and <job_id> as an individual job ID: sinfo is used to view information about mox nodes and partitions. Use sinfo -p <group_name> to view information about your group's partition or allocation.squeue is used to view information about jobs located in the scheduling queue. Use squeue -p <group_name> to view information about your group's nodes. Use squeue -u <net_id> to view your jobs.scancel is used to cancel jobs. Use scancel <job_id> to cancel a job with the given job ID, or use scancel -u <net_id> to cancel all of your jobs.sstat displays status information of a running job pertaining to CPU, Task, Node, Resident Set Size (RSS), and Virtual Memory (VM) statistics. Read the man page for a comprehensive list of format options. sacct displays information about completed jobs. Read the man page for a comprehensive list of format options.sreport generates reports about job usage and cluster utilization from Slurm accounting (sacct) data. For example, to get historical usage the group <group_name> in March 2020, use sreport cluster UserUtilizationByAccount Start=2020-03-01 End=2020-03-31 Accounts=<group_name>. "},{"title":"FOR ADVANCED USERS ONLY: salloc","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#for-advanced-users-only-salloc","content":"warning Do not use salloc unless you have a specific reason. To get nodes for interactive use: Copy salloc -N <num_nodes> -p <group_name> -A <group_name> --time=<time> --mem=<size>G When this command runs, you will have been allocated num_nodes nodes but you will still be on the mox login node. Use srun <command> to run commands on all allocated nodes. Use scontrol show hostnames to get the hostnames of your allocated nodes. Once you have the hostnames, you can ssh to them using ssh <hostname> and then use them for your work (e.g. Apache Spark, Hadoop, etc.) Example: Copy [linj66@mox2 ~]$ salloc -N 2 -p stf -A stf --time=5 --mem=5G salloc: Pending job allocation 2620960 salloc: job 2620960 queued and waiting for resources salloc: job 2620960 has been allocated resources salloc: Granted job allocation 2620960 salloc: Waiting for resource configuration salloc: Nodes n[2148-2149] are ready for job [linj66@mox2 ~]$ srun echo \"test\" test test [linj66@mox2 ~]$ scontrol show hostnames n2148 n2149 [linj66@mox2 ~]$ ssh n2148 Warning: Permanently added 'n2148,10.64.56.248' (ECDSA) to the list of known hosts. [linj66@n2148 ~]$ "},{"title":"Man Pages","type":1,"pageTitle":"Scheduling Jobs","url":"docs/getting_started/scheduling-jobs#man-pages","content":"All of these man pages can also be viewed on mox by running man <command>. sacctsallocsbatchscancelscontrolsinfosqueuesreportsrunsstat "},{"title":"Markdown Guide","type":0,"sectionRef":"#","url":"docs/markdown-guide","content":"","keywords":""},{"title":"Markdown Syntax","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#markdown-syntax","content":"To serve as an example page when styling markdown based Docusaurus sites. "},{"title":"Headers","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#headers","content":"H1 - Create the best documentation# "},{"title":"H2 - Create the best documentation","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#h2---create-the-best-documentation","content":""},{"title":"H3 - Create the best documentation","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#h3---create-the-best-documentation","content":"H4 - Create the best documentation# H5 - Create the best documentation# H6 - Create the best documentation#  "},{"title":"Emphasis","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#emphasis","content":"Emphasis, aka italics, with asterisks or underscores. Strong emphasis, aka bold, with asterisks or underscores. Combined emphasis with asterisks and underscores. Strikethrough uses two tildes. Scratch this.  "},{"title":"Lists","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#lists","content":"First ordered list itemAnother item ⋅⋅* Unordered sub-list.Actual numbers don't matter, just that it's a number ⋅⋅1. Ordered sub-listAnd another item. ⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown). ⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅ ⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅ ⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.) Unordered list can use asterisks Or minuses Or pluses  "},{"title":"Links","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#links","content":"I'm an inline-style link I'm an inline-style link with title I'm a reference-style link I'm a relative reference to a repository file You can use numbers for reference-style link definitions Or leave it empty and use the link text itself. URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example). Some text to show that the reference links can follow later.  "},{"title":"Images","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#images","content":"Here's our logo (hover to see the title text): Inline-style:  Reference-style:   "},{"title":"Code","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#code","content":"Copy var s ='JavaScript syntax highlighting'; alert(s); Copy s =\"Python syntax highlighting\" print(s) Copy No language indicated, so no syntax highlighting. But let's throw in a <b>tag</b>. Copy functionhighlightMe(){ console.log('This line can be highlighted!'); }  "},{"title":"Tables","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#tables","content":"Colons can be used to align columns. Tables\tAre\tCoolcol 3 is\tright-aligned\t\\$1600 col 2 is\tcentered\t\\$12 zebra stripes\tare neat\t\\$1 There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown. Markdown\tLess\tPrettyStill\trenders\tnicely 1\t2\t3  "},{"title":"Blockquotes","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#blockquotes","content":"Blockquotes are very handy in email to emulate reply text. This line is part of the same quote. Quote break. This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can putMarkdown into a blockquote.  "},{"title":"Inline HTML","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#inline-html","content":"Definition list Is something people use sometimes. Markdown in HTML Does *not* work **very** well. Use HTML tags.  "},{"title":"Line Breaks","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#line-breaks","content":"Here's a line for us to start with. This line is separated from the one above by two newlines, so it will be a separate paragraph. This line is also a separate paragraph, but... This line is only separated by a single newline, so it's a separate line in the same paragraph.  "},{"title":"Admonitions","type":1,"pageTitle":"Markdown Guide","url":"docs/markdown-guide#admonitions","content":"note This is a note tip This is a tip important This is important caution This is a caution warning This is a warning "},{"title":"Powered by MDX","type":0,"sectionRef":"#","url":"docs/mdx","content":"You can write JSX and use React components within your Markdown thanks to MDX. Docusaurus green and Facebook blue are my favorite colors. I can write Markdown alongside my JSX!","keywords":""},{"title":"Tutorial","type":0,"sectionRef":"#","url":"docs/tutorial","content":"Probably put something about how to run a simple HYAK job or something here.","keywords":""}]